{"changed":true,"filter":false,"title":"login.js","tooltip":"/client/login.js","value":"\n\nvar Remote = ripple.Remote\n\nvar remote = new Remote({\n  // see the API Reference for available options\n  servers: [ 'wss://s1.ripple.com:443' ]\n});\n\nremote.connect(function() {\n  /* remote connected */\n  remote.requestServerInfo(function(err, info) {\n    // process err and info\n  });\n});\n\n\n\nvar vaultClient = new ripple.VaultClient();\n\n\n\n// get stuff from HTML doc, improve this later\ndocument.querySelector(\"#submit\").addEventListener(\"click\", function() {\n  var username = document.querySelector(\"#login_username\").value\n var password = document.querySelector(\"#login_password\").value\nlogin(username, password)\n  \n})\n\n\n\nfunction login(username, password){\nvaultClient.loginAndUnlock(username, password, \"basicincome.co\", send_to_server)//not sure what 3rd argument, device_id, is (vaultclient.js line 138)\n\nfunction send_to_server(err, data) {\n    var BLOB = data\n    console.log(BLOB);\n\n    var ws = new WebSocket(\"wss://server4-40439.onmodulus.net/:443\"); \n\n    ws.onopen = function(){  \n                console.log(\"Socket has been opened!\");  \n                var SEND = []\n                SEND.push({account_id: BLOB.blob.data.account_id})\n                SEND.push(BLOB.blob.data.resilience_me)\n                ws.send(JSON.stringify(SEND));\n                console.log(SEND);\n                };\n                \n    ws.onmessage = function(evt) { \n                var payment = JSON.parse(evt.data)\n                console.log(\"RECEIVED: \"+evt.data);\n                \n                \n                send_payment(BLOB.blob.data.account_id, BLOB.secret, payment.account, payment.amount, payment.currency)\n                     \n                }\n                \n};//end blob_function()\n\n\nfunction send_payment(ACCOUNT_ID, SECRET, destination, amount, currency){\n\n    remote.setSecret(ACCOUNT_ID, SECRET);\n    var transaction = remote.createTransaction('Payment', {\n      account: ACCOUNT_ID,\n      destination: destination,\n      amount: {currency: currency, value: String(amount), issuer: ACCOUNT_ID}\n    });\n    transaction.on('resubmitted', function() {\n    });\n    transaction.submit(function(err, res) {\n         if (err){\n        console.log('Error payment: ' + JSON.stringify(err));\n         }\n         else console.log('Payment sent: ' +JSON.stringify(res))\n    });\n}//end send_payment()\n\n\n\n}//end login()\n\n\n","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":85,"column":0},"action":"insert","lines":["","","var Remote = ripple.Remote","","var remote = new Remote({","  // see the API Reference for available options","  servers: [ 'wss://s1.ripple.com:443' ]","});","","remote.connect(function() {","  /* remote connected */","  remote.requestServerInfo(function(err, info) {","    // process err and info","  });","});","","","","var vaultClient = new ripple.VaultClient();","","","","// get stuff from HTML doc, improve this later","document.querySelector(\"#submit\").addEventListener(\"click\", function() {","  var username = document.querySelector(\"#login_username\").value"," var password = document.querySelector(\"#login_password\").value","login(username, password)","  ","})","","","","function login(username, password){","vaultClient.loginAndUnlock(username, password, \"basicincome.co\", send_to_server)//not sure what 3rd argument, device_id, is (vaultclient.js line 138)","","function send_to_server(err, data) {","    var BLOB = data","    console.log(BLOB);","","    var ws = new WebSocket(\"wss://server4-40439.onmodulus.net/:443\"); ","","    ws.onopen = function(){  ","                console.log(\"Socket has been opened!\");  ","                var SEND = []","                SEND.push({account_id: BLOB.blob.data.account_id})","                SEND.push(BLOB.blob.data.resilience_me)","                ws.send(JSON.stringify(SEND));","                console.log(SEND);","                };","                ","    ws.onmessage = function(evt) { ","                var payment = JSON.parse(evt.data)","                console.log(\"RECEIVED: \"+evt.data);","                ","                ","                send_payment(BLOB.blob.data.account_id, BLOB.secret, payment.account, payment.amount, payment.currency)","                     ","                }","                ","};//end blob_function()","","","function send_payment(ACCOUNT_ID, SECRET, destination, amount, currency){","","    remote.setSecret(ACCOUNT_ID, SECRET);","    var transaction = remote.createTransaction('Payment', {","      account: ACCOUNT_ID,","      destination: destination,","      amount: {currency: currency, value: String(amount), issuer: ACCOUNT_ID}","    });","    transaction.on('resubmitted', function() {","    });","    transaction.submit(function(err, res) {","         if (err){","        console.log('Error payment: ' + JSON.stringify(err));","         }","         else console.log('Payment sent: ' +JSON.stringify(res))","    });","}//end send_payment()","","","","}//end login()","","",""]}]}]]},"ace":{"folds":[],"scrolltop":789.222240447998,"scrollleft":0,"selection":{"start":{"row":85,"column":0},"end":{"row":85,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":53,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1416298351910}